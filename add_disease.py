#!/usr/bin/env python3
"""
Script para adicionar novas doen√ßas ao chatbot multi-doen√ßas
"""

import json
import os
import re

def add_new_disease():
    """Interface para adicionar nova doen√ßa"""
    print("=" * 50)
    print("    ADICIONAR NOVA DOEN√áA AO CHATBOT")
    print("=" * 50)
    print()
    
    # Coletar informa√ß√µes da doen√ßa
    disease_id = input("ID da doen√ßa (ex: cancer, tuberculose): ").strip().lower()
    disease_name = input("Nome da doen√ßa (ex: C√¢ncer, Tuberculose): ").strip()
    description = input("Descri√ß√£o da doen√ßa: ").strip()
    keywords = input("Palavras-chave (separadas por v√≠rgula): ").strip()
    
    # Verificar se PDF existe
    pdf_path = f"PDFs/{disease_id}.pdf"
    pdf_exists = os.path.exists(pdf_path)
    
    if not pdf_exists:
        print(f"\n‚ö†Ô∏è  AVISO: PDF n√£o encontrado em {pdf_path}")
        print("O chatbot funcionar√° apenas com respostas padr√£o para esta doen√ßa")
    
    # Personalidades padr√£o
    personalities = {
        "dr_gasnelio": {
            "name": "Dr. Gasnelio",
            "style": "s√©rio e t√©cnico",
            "greeting": f"Ol√°! Sou o Dr. Gasnelio, especialista em {disease_name.lower()}. Como posso ajud√°-lo hoje?",
            "fallback": f"Baseado na literatura m√©dica sobre {disease_name.lower()}, posso orientar que esta condi√ß√£o requer avalia√ß√£o m√©dica especializada. Recomendo consultar um m√©dico para diagn√≥stico adequado."
        },
        "ga": {
            "name": "G√°",
            "style": "descontra√≠do e simples",
            "greeting": f"Oi! Sou o G√°! üòä Vou te ajudar a entender sobre {disease_name.lower()} de um jeito bem simples!",
            "fallback": f"Olha, sobre isso eu n√£o tenho certeza no material que tenho aqui. Mas posso te dizer que √© sempre bom procurar um m√©dico quando temos d√∫vidas sobre sa√∫de, certo? üòä"
        }
    }
    
    # Criar estrutura da doen√ßa
    new_disease = {
        "name": disease_name,
        "pdf_path": pdf_path,
        "description": description,
        "keywords": [kw.strip() for kw in keywords.split(",")],
        "personalities": personalities
    }
    
    # Mostrar resumo
    print("\n" + "=" * 50)
    print("    RESUMO DA NOVA DOEN√áA")
    print("=" * 50)
    print(f"ID: {disease_id}")
    print(f"Nome: {disease_name}")
    print(f"Descri√ß√£o: {description}")
    print(f"Palavras-chave: {', '.join(new_disease['keywords'])}")
    print(f"PDF: {pdf_path} {'‚úÖ' if pdf_exists else '‚ùå'}")
    print(f"Personalidades: Dr. Gasnelio, G√°")
    
    # Confirmar
    confirm = input("\nConfirma a adi√ß√£o desta doen√ßa? (s/n): ").strip().lower()
    if confirm != 's':
        print("Opera√ß√£o cancelada.")
        return
    
    # Gerar c√≥digo Python
    python_code = generate_python_code(disease_id, new_disease)
    
    # Salvar em arquivo
    filename = f"disease_{disease_id}.py"
    with open(filename, 'w', encoding='utf-8') as f:
        f.write(python_code)
    
    print(f"\n‚úÖ C√≥digo gerado em: {filename}")
    print("\nPara adicionar ao sistema:")
    print("1. Abra o arquivo app_multi_disease.py")
    print("2. Localize a se√ß√£o 'diseases'")
    print("3. Adicione o c√≥digo gerado")
    print("4. Reinicie o servidor")
    
    # Mostrar c√≥digo
    print(f"\n{'='*50}")
    print("    C√ìDIGO PARA ADICIONAR AO app_multi_disease.py")
    print("="*50)
    print(python_code)

def generate_python_code(disease_id, disease_data):
    """Gera c√≥digo Python para adicionar a doen√ßa"""
    code = f'''                "{disease_id}": {{
                    "name": "{disease_data['name']}",
                    "pdf_path": "{disease_data['pdf_path']}",
                    "description": "{disease_data['description']}",
                    "keywords": {json.dumps(disease_data['keywords'], ensure_ascii=False)},
                    "personalities": {{
                        "dr_gasnelio": {{
                            "name": "Dr. Gasnelio",
                            "style": "s√©rio e t√©cnico",
                            "greeting": "{disease_data['personalities']['dr_gasnelio']['greeting']}",
                            "fallback": "{disease_data['personalities']['dr_gasnelio']['fallback']}"
                        }},
                        "ga": {{
                            "name": "G√°",
                            "style": "descontra√≠do e simples",
                            "greeting": "{disease_data['personalities']['ga']['greeting']}",
                            "fallback": "{disease_data['personalities']['ga']['fallback']}"
                        }}
                    }}
                }},'''
    return code

def list_existing_diseases():
    """Lista doen√ßas j√° configuradas"""
    print("=" * 50)
    print("    DOEN√áAS J√Å CONFIGURADAS")
    print("=" * 50)
    
    # Ler app_multi_disease.py para extrair doen√ßas
    try:
        with open('app_multi_disease.py', 'r', encoding='utf-8') as f:
            content = f.read()
        
        # Extrair doen√ßas usando regex
        disease_pattern = r'"([^"]+)":\s*{\s*"name":\s*"([^"]+)"'
        diseases = re.findall(disease_pattern, content)
        
        for disease_id, disease_name in diseases:
            pdf_path = f"PDFs/{disease_id}.pdf"
            pdf_exists = os.path.exists(pdf_path)
            status = "‚úÖ" if pdf_exists else "‚ùå"
            print(f"{disease_id}: {disease_name} {status}")
            
    except FileNotFoundError:
        print("Arquivo app_multi_disease.py n√£o encontrado")
    except Exception as e:
        print(f"Erro ao ler arquivo: {e}")

def main():
    """Menu principal"""
    while True:
        print("\n" + "=" * 50)
        print("    GERENCIADOR DE DOEN√áAS")
        print("=" * 50)
        print("1. Listar doen√ßas existentes")
        print("2. Adicionar nova doen√ßa")
        print("3. Sair")
        print()
        
        choice = input("Escolha uma op√ß√£o (1-3): ").strip()
        
        if choice == '1':
            list_existing_diseases()
        elif choice == '2':
            add_new_disease()
        elif choice == '3':
            print("Saindo...")
            break
        else:
            print("Op√ß√£o inv√°lida!")

if __name__ == "__main__":
    main() 